// <auto-generated />
using System;
using LibrarySystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibrarySystem.Migrations
{
    [DbContext(typeof(LibraryManagementContext))]
    [Migration("20220627053108_testing")]
    partial class testing
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LibrarySystem.Models.AccountsInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Psd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AccountsInfo");
                });

            modelBuilder.Entity("LibrarySystem.Models.BooksInfo", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberofCopies")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.ToTable("BooksInfo");
                });

            modelBuilder.Entity("LibrarySystem.Models.LendRequest", b =>
                {
                    b.Property<int>("LendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<double?>("FineAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReqStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LendId");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("LendRequest");
                });

            modelBuilder.Entity("LibrarySystem.Models.LendRequest", b =>
                {
                    b.HasOne("LibrarySystem.Models.BooksInfo", "Book")
                        .WithMany("LendRequests")
                        .HasForeignKey("BookId");

                    b.HasOne("LibrarySystem.Models.AccountsInfo", "User")
                        .WithMany("LendRequests")
                        .HasForeignKey("UserId");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibrarySystem.Models.AccountsInfo", b =>
                {
                    b.Navigation("LendRequests");
                });

            modelBuilder.Entity("LibrarySystem.Models.BooksInfo", b =>
                {
                    b.Navigation("LendRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
